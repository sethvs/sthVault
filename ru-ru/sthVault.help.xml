<?xml version="1.0" encoding="utf-8"?>
<helpItems schema="maml" xmlns="http://msh">
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-sthVault</command:name>
      <command:verb>Get</command:verb>
      <command:noun>sthVault</command:noun>
      <maml:description>
        <maml:para>Команда отображает содержимое хранилища.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Функция Get-sthVault отображает список существующих хранилищ или содержимое указанного хранилища.

Хранилище (Vault) представляет из себя .xml файл, содержащий пары Имя-Значение.
Хранилища могут быть полезны если вам нужно сохранить некие значения, будь то обычный текст, объекты SecureString или PSCredential, с целью их использования в скриптах автоматизации или рабочих процессах.
Вы можете создать хранилище при помощи команды `New-sthVault` с параметром -VaultName или -VaultFilePath.
Параметр -VaultName создает .xml файл с указанным именем в папке Vaults, расположенной в каталоге модуля.
Параметр -VaultFilePath принимает в качестве значения путь и имя файла, например C:\Folder\file.xml, и создает его в указанном расположении.

Значения свойств хранилища могут быть трех типов: PlainText, SecureString, и Credential.
Вы можете использовать параметры -PlainText, -SecureString, и -Credential для создания требуемых свойств.
Каждый из этих параметров принимает в качестве значения хеш-таблицу (hashtable), содержащую пары Имя-Значение.
Например:

$PlainText = @{PlainTextOne = 'One'; PlainTextTwo = 'Two'}

$SecureStringOne = ConvertTo-SecureString -String 'One' -AsPlainText -Force
$SecureString = @{SecureStringOne = $SecureStringOne; SecureStringTwo = 'Two'}

$CredentialOne = New-Object System.Management.Automation.PSCredential -ArgumentList 'One', $(ConvertTo-SecureString -String 'OnePassword' -AsPlainText -Force)
$Credential = @{CredentialOne = $CredentialOne; CredentialTwo = 'Two', 'TwoPassword'}

New-sthVault -VaultName TheVault -PlainText $PlainText -SecureString $SecureString -Credential $Credential

Вы можете получить содержимое хранилица при помощи команды `Get-sthVault`.
Например:

$Settings = Get-sthVault -VaultName TheVault

Затем, вы можете использовать его в скриптах автоматизации и рабочих процессах.
Например:

Get-SomeInfo -UserName $Settings.PlainTextOne -PasswordAsSecureString $Settings.SecureStringOne
ConnectTo-Something -Credential $Settings.CredentialOne
Get-SomeData -Credential $Settings.CredentialTwo

Объекты SecureString и PSCredential используют DPAPI, таким образом хранилище, содержащее эти объекты, может быть использовано только на том компьютере, где оно было создано и только под той пользовательской учетной записью, под которой оно было создано.
</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-sthVault</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
          <maml:name>VaultName</maml:name>
          <maml:Description>
            <maml:para>Указывает имя хранилища.</maml:para>
            <maml:para>Это имя хранилища, созданного при помощи команды `New-sthVault` с параметром -VaultName, находящегося в папке Vaults, расположенной в каталоге модуля.</maml:para>
            <maml:para>Если параметр отсутствует, команда выводит имена всех хранилищ, находящихся в папке Vaults, расположенной в каталоге модуля.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PropertyType</maml:name>
          <maml:Description>
            <maml:para>Указывает типы свойств, которые требуется получить из хранилища.</maml:para>
            <maml:para>Параметр принимает следующие значения:

- PlainText
- SecureString
- Credential</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">PlainText</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SecureString</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Credential</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PropertyName</maml:name>
          <maml:Description>
            <maml:para>Указывает имена свойств, которые требуется получить из хранилища.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ShowSecureData</maml:name>
          <maml:Description>
            <maml:para>Указывает, что зашифрованные данные, такие как значения SecureString или Credential, должны быть представлены в расшифрованном виде.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-sthVault</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>VaultFilePath</maml:name>
          <maml:Description>
            <maml:para>Указывает путь и имя файла хранилища.</maml:para>
            <maml:para>Это путь и имя файла .xml, созданного при помощи команды `New-sthVault` с параметром -VaultFilePath.</maml:para>
            <maml:para>Этот параметр позволяет вам использовать файл хранилища, расположенный в произвольной локации.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PropertyType</maml:name>
          <maml:Description>
            <maml:para>Указывает типы свойств, которые требуется получить из хранилища.</maml:para>
            <maml:para>Параметр принимает следующие значения:

- PlainText
- SecureString
- Credential</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">PlainText</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SecureString</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Credential</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PropertyName</maml:name>
          <maml:Description>
            <maml:para>Указывает имена свойств, которые требуется получить из хранилища.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ShowSecureData</maml:name>
          <maml:Description>
            <maml:para>Указывает, что зашифрованные данные, такие как значения SecureString или Credential, должны быть представлены в расшифрованном виде.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
        <maml:name>VaultName</maml:name>
        <maml:Description>
          <maml:para>Указывает имя хранилища.</maml:para>
          <maml:para>Это имя хранилища, созданного при помощи команды `New-sthVault` с параметром -VaultName, находящегося в папке Vaults, расположенной в каталоге модуля.</maml:para>
          <maml:para>Если параметр отсутствует, команда выводит имена всех хранилищ, находящихся в папке Vaults, расположенной в каталоге модуля.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>VaultFilePath</maml:name>
        <maml:Description>
          <maml:para>Указывает путь и имя файла хранилища.</maml:para>
          <maml:para>Это путь и имя файла .xml, созданного при помощи команды `New-sthVault` с параметром -VaultFilePath.</maml:para>
          <maml:para>Этот параметр позволяет вам использовать файл хранилища, расположенный в произвольной локации.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PropertyType</maml:name>
        <maml:Description>
          <maml:para>Указывает типы свойств, которые требуется получить из хранилища.</maml:para>
          <maml:para>Параметр принимает следующие значения:

- PlainText
- SecureString
- Credential</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PropertyName</maml:name>
        <maml:Description>
          <maml:para>Указывает имена свойств, которые требуется получить из хранилища.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ShowSecureData</maml:name>
        <maml:Description>
          <maml:para>Указывает, что зашифрованные данные, такие как значения SecureString или Credential, должны быть представлены в расшифрованном виде.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>System.Object</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>Объекты SecureString и PSCredential используют DPAPI, таким образом хранилище, содержащее эти объекты, может быть использовано только на том компьютере, где оно было создано и только под той пользовательской учетной записью, под которой оно было создано.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>Пример 1: Получение списка хранилищ</maml:title>
        <dev:code>Get-sthVault

SomeVault
AnotherVault</dev:code>
        <dev:remarks>
          <maml:para>Команда отображает список созданных ранее хранилищ, находящихся в папке Vaults, расположенной в каталоге модуля.</maml:para>
          <maml:para/>
          <maml:para/>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Пример 2: Получение содержимого хранилища</maml:title>
        <dev:code>Get-sthVault -VaultName TheVault

Name                           Value
----                           -----
PlainTextOne                   One
PlainTextTwo                   Two
SecureStringOne                System.Security.SecureString
SecureStringTwo                System.Security.SecureString
CredentialOne                  System.Management.Automation.PSCredential
CredentialTwo                  System.Management.Automation.PSCredential</dev:code>
        <dev:remarks>
          <maml:para>Команда отображает содержимое хранилища с именем TheVault, состоящее из двух свойств, сохраненных открытым текстом - PlainTextOne и PlainTextTwo, двух объектов SecureString - SecureStringOne и SecureStringTwo и двух объектов PSCredential - CredentialOne and CredentialTwo.</maml:para>
          <maml:para/>
          <maml:para/>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Пример 3: Получение содержимого хранилища и представление зашифрованных элементов в расшифрованном виде</maml:title>
        <dev:code>Get-sthVault -VaultName TheVault -ShowSecureData 

Name                           Value
----                           -----
PlainTextOne                   One
PlainTextTwo                   Two
SecureStringOne                One
SecureStringTwo                Two
CredentialOne                  {One, OnePassword}
CredentialTwo                  {Two, TwoPassword}</dev:code>
        <dev:remarks>
          <maml:para>Команда отображает содержимое хранилища с именем TheVault, представляя зашифрованные значения, такие как объекты SecureString и PSCredential, в расшифрованном виде.</maml:para>
          <maml:para/>
          <maml:para/>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Пример 4: Получение содержимого файла хранилища, расположенного в указанном местоположении</maml:title>
        <dev:code>Get-sthVault -VaultFilePath C:\Vaults\SomeVault.xml

Name                           Value
----                           -----
PlainText                      SomeValue
SecureString                   System.Security.SecureString
Credential                     System.Management.Automation.PSCredential</dev:code>
        <dev:remarks>
          <maml:para>Команда отображает содержимое файла хранилища с именем SomeVault.xml, расположенного в папке C:\Vaults.</maml:para>
          <maml:para/>
          <maml:para/>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Пример 5: Получение свойств определенного типа</maml:title>
        <dev:code>Get-sthVault -VaultName TheVault -PropertyType PlainText, SecureString

Name                           Value
----                           -----
PlainTextOne                   One
PlainTextTwo                   Two
SecureStringOne                System.Security.SecureString
SecureStringTwo                System.Security.SecureString</dev:code>
        <dev:remarks>
          <maml:para>Команда получает содержимое хранилища с именем TheVault, возвращая только свойства со значениями типа PlainText и SecureString.</maml:para>
          <maml:para/>
          <maml:para/>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Пример 6: Получение свойств с определенными именами</maml:title>
        <dev:code>Get-sthVault -VaultName TheVault -PropertyName PlainTextOne, SecureStringTwo

Name                           Value
----                           -----
PlainTextOne                   One
SecureStringTwo                System.Security.SecureString</dev:code>
        <dev:remarks>
          <maml:para>Команда получает содержимое хранилища с именем TheVault, возвращая только свойства с именами PlainTextOne и SecureStringTwo.</maml:para>
          <maml:para/>
          <maml:para/>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Пример 7: Получение свойств с определенными именами с использованием символов подстановки</maml:title>
        <dev:code>Get-sthVault -VaultName $VaultName -PropertyName *One

Name                           Value
----                           -----
PlainTextOne                   One
SecureStringOne                System.Security.SecureString
CredentialOne                  System.Management.Automation.PSCredential</dev:code>
        <dev:remarks>
          <maml:para>Команда получает содержимое хранилища с именем TheVault, возвращая только свойства, имена которых оканчиваются на One.</maml:para>
          <maml:para/>
          <maml:para/>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>New-sthVault</command:name>
      <command:verb>New</command:verb>
      <command:noun>sthVault</command:noun>
      <maml:description>
        <maml:para>Команда создает хранилище.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Функция New-sthVault создает хранилище с указанными свойствами.

Хранилище (Vault) представляет из себя .xml файл, содержащий пары Имя-Значение.
Хранилища могут быть полезны если вам нужно сохранить некие значения, будь то обычный текст, объекты SecureString или PSCredential, с целью их использования в скриптах автоматизации или рабочих процессах.
Вы можете создать хранилище при помощи параметров -VaultName или -VaultFilePath.
Параметр -VaultName создает .xml файл с указанным именем в папке Vaults, расположенной в каталоге модуля.
Параметр -VaultFilePath принимает в качестве значения путь и имя файла, например C:\Folder\file.xml, и создает его в указанном расположении.

Значения свойств хранилища могут быть трех типов: PlainText, SecureString, и Credential.
Вы можете использовать параметры -PlainText, -SecureString и -Credential для создания требуемых свойств.
Каждый из этих параметров принимает в качестве значения хеш-таблицу (hashtable), содержащую пары Имя-Значение.
Например:

$PlainText = @{PlainTextOne = 'One'; PlainTextTwo = 'Two'}

$SecureStringOne = ConvertTo-SecureString -String 'One' -AsPlainText -Force
$SecureString = @{SecureStringOne = $SecureStringOne; SecureStringTwo = 'Two'}

$CredentialOne = New-Object System.Management.Automation.PSCredential -ArgumentList 'One', $(ConvertTo-SecureString -String 'OnePassword' -AsPlainText -Force)
$Credential = @{CredentialOne = $CredentialOne; CredentialTwo = 'Two', 'TwoPassword'}

New-sthVault -VaultName TheVault -PlainText $PlainText -SecureString $SecureString -Credential $Credential

Вы можете получить содержимое хранилица при помощи команды `Get-sthVault`.
Например:

$Settings = Get-sthVault -VaultName TheVault

Затем, вы можете использовать его в скриптах автоматизации и рабочих процессах.
Например:

Get-SomeInfo -UserName $Settings.PlainTextOne -PasswordAsSecureString $Settings.SecureStringOne
ConnectTo-Something -Credential $Settings.CredentialOne
Get-SomeData -Credential $Settings.CredentialTwo

Объекты SecureString и PSCredential используют DPAPI, таким образом хранилище, содержащее эти объекты, может быть использовано только на том компьютере, где оно было создано и только под той пользовательской учетной записью, под которой оно было создано.
</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>New-sthVault</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
          <maml:name>VaultName</maml:name>
          <maml:Description>
            <maml:para>Указывает имя хранилища.</maml:para>
            <maml:para>Функция создает хранилище с указанным именем в папке Vaults, расположенной в каталоге модуля.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PlainText</maml:name>
          <maml:Description>
            <maml:para>Указывает свойства, значения которых должны быть сохранены открытым текстом.</maml:para>
            <maml:para>Параметр принимает в качестве значения хеш-таблицу (hashtable), содержащую пары Имя-Значение.</maml:para>
            <maml:para>Например:</maml:para>
            <maml:para>New-sthVault SomeVault -PlainText @{PlainTextOne = 'One'; PlainTextTwo = 'Two'}</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SecureString</maml:name>
          <maml:Description>
            <maml:para>Указывает свойства, значения которых должны быть сохранены в виде объекта SecureString.</maml:para>
            <maml:para>Параметр принимает в качестве значения хеш-таблицу (hashtable), содержащую пары Имя-Значение.</maml:para>
            <maml:para>Значения хэш-таблицы могут быть как объектами SecureString, так и открытым текстом.</maml:para>
            <maml:para>Если значение представлено открытым текстом, оно будет преобразовано в объект SecureString.</maml:para>
            <maml:para>Например:</maml:para>
            <maml:para>$SecureStringOne = ConvertTo-SecureString -String 'One' -AsPlainText -Force
New-sthVault SomeVault -SecureString @{SecureStringOne = $SecureStringOne; SecureStringTwo = 'Two'}</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Credential</maml:name>
          <maml:Description>
            <maml:para>Указывает свойства, значения которых должны быть сохранены в виде объекта PSCredential.</maml:para>
            <maml:para>Параметр принимает в качестве значения хеш-таблицу (hashtable), содержащую пары Имя-Значение.</maml:para>
            <maml:para>Значения хэш-таблицы могут быть как объектами PSCredential, так и массивом, состоящим из двух элементов, к примеру - @{Credential = 'Name', 'Password'}</maml:para>
            <maml:para>Если значение представлено в виде массива, оно будет преобразовано в объект PSCredential.</maml:para>
            <maml:para>Например:</maml:para>
            <maml:para>$CredentialOne = New-Object System.Management.Automation.PSCredential -ArgumentList 'One', $(ConvertTo-SecureString -String 'OnePassword' -AsPlainText -Force)
New-sthVault SomeVault -Credential @{CredentialOne = $CredentialOne; CredentialTwo = 'Two', 'TwoPassword'}</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>New-sthVault</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>VaultFilePath</maml:name>
          <maml:Description>
            <maml:para>Указывает путь и имя файла хранилища.</maml:para>
            <maml:para>Этот параметр позволяет вам создать файл хранилища, расположенный в произвольной локации.</maml:para>
            <maml:para>Значение должно содержать путь и имя файла с расширением .xml.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PlainText</maml:name>
          <maml:Description>
            <maml:para>Указывает свойства, значения которых должны быть сохранены открытым текстом.</maml:para>
            <maml:para>Параметр принимает в качестве значения хеш-таблицу (hashtable), содержащую пары Имя-Значение.</maml:para>
            <maml:para>Например:</maml:para>
            <maml:para>New-sthVault SomeVault -PlainText @{PlainTextOne = 'One'; PlainTextTwo = 'Two'}</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SecureString</maml:name>
          <maml:Description>
            <maml:para>Указывает свойства, значения которых должны быть сохранены в виде объекта SecureString.</maml:para>
            <maml:para>Параметр принимает в качестве значения хеш-таблицу (hashtable), содержащую пары Имя-Значение.</maml:para>
            <maml:para>Значения хэш-таблицы могут быть как объектами SecureString, так и открытым текстом.</maml:para>
            <maml:para>Если значение представлено открытым текстом, оно будет преобразовано в объект SecureString.</maml:para>
            <maml:para>Например:</maml:para>
            <maml:para>$SecureStringOne = ConvertTo-SecureString -String 'One' -AsPlainText -Force
New-sthVault SomeVault -SecureString @{SecureStringOne = $SecureStringOne; SecureStringTwo = 'Two'}</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Credential</maml:name>
          <maml:Description>
            <maml:para>Указывает свойства, значения которых должны быть сохранены в виде объекта PSCredential.</maml:para>
            <maml:para>Параметр принимает в качестве значения хеш-таблицу (hashtable), содержащую пары Имя-Значение.</maml:para>
            <maml:para>Значения хэш-таблицы могут быть как объектами PSCredential, так и массивом, состоящим из двух элементов, к примеру - @{Credential = 'Name', 'Password'}</maml:para>
            <maml:para>Если значение представлено в виде массива, оно будет преобразовано в объект PSCredential.</maml:para>
            <maml:para>Например:</maml:para>
            <maml:para>$CredentialOne = New-Object System.Management.Automation.PSCredential -ArgumentList 'One', $(ConvertTo-SecureString -String 'OnePassword' -AsPlainText -Force)
New-sthVault SomeVault -Credential @{CredentialOne = $CredentialOne; CredentialTwo = 'Two', 'TwoPassword'}</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
        <maml:name>VaultName</maml:name>
        <maml:Description>
          <maml:para>Указывает имя хранилища.</maml:para>
          <maml:para>Функция создает хранилище с указанным именем в папке Vaults, расположенной в каталоге модуля.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>VaultFilePath</maml:name>
        <maml:Description>
          <maml:para>Указывает путь и имя файла хранилища.</maml:para>
          <maml:para>Этот параметр позволяет вам создать файл хранилища, расположенный в произвольной локации.</maml:para>
          <maml:para>Значение должно содержать путь и имя файла с расширением .xml.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PlainText</maml:name>
        <maml:Description>
          <maml:para>Указывает свойства, значения которых должны быть сохранены открытым текстом.</maml:para>
          <maml:para>Параметр принимает в качестве значения хеш-таблицу (hashtable), содержащую пары Имя-Значение.</maml:para>
          <maml:para>Например:</maml:para>
          <maml:para>New-sthVault SomeVault -PlainText @{PlainTextOne = 'One'; PlainTextTwo = 'Two'}</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>Hashtable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SecureString</maml:name>
        <maml:Description>
          <maml:para>Указывает свойства, значения которых должны быть сохранены в виде объекта SecureString.</maml:para>
          <maml:para>Параметр принимает в качестве значения хеш-таблицу (hashtable), содержащую пары Имя-Значение.</maml:para>
          <maml:para>Значения хэш-таблицы могут быть как объектами SecureString, так и открытым текстом.</maml:para>
          <maml:para>Если значение представлено открытым текстом, оно будет преобразовано в объект SecureString.</maml:para>
          <maml:para>Например:</maml:para>
          <maml:para>$SecureStringOne = ConvertTo-SecureString -String 'One' -AsPlainText -Force
New-sthVault SomeVault -SecureString @{SecureStringOne = $SecureStringOne; SecureStringTwo = 'Two'}</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>Hashtable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Credential</maml:name>
        <maml:Description>
          <maml:para>Указывает свойства, значения которых должны быть сохранены в виде объекта PSCredential.</maml:para>
          <maml:para>Параметр принимает в качестве значения хеш-таблицу (hashtable), содержащую пары Имя-Значение.</maml:para>
          <maml:para>Значения хэш-таблицы могут быть как объектами PSCredential, так и массивом, состоящим из двух элементов, к примеру - @{Credential = 'Name', 'Password'}</maml:para>
          <maml:para>Если значение представлено в виде массива, оно будет преобразовано в объект PSCredential.</maml:para>
          <maml:para>Например:</maml:para>
          <maml:para>$CredentialOne = New-Object System.Management.Automation.PSCredential -ArgumentList 'One', $(ConvertTo-SecureString -String 'OnePassword' -AsPlainText -Force)
New-sthVault SomeVault -Credential @{CredentialOne = $CredentialOne; CredentialTwo = 'Two', 'TwoPassword'}</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>Hashtable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>System.Object</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>Объекты SecureString и PSCredential используют DPAPI, таким образом хранилище, содержащее эти объекты, может быть использовано только на том компьютере, где оно было создано и только под той пользовательской учетной записью, под которой оно было создано.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>Пример 1: Создание хранилища</maml:title>
        <dev:code>$PlainText = @{PlainTextOne = 'One'; PlainTextTwo = 'Two'}

$SecureStringOne = ConvertTo-SecureString -String 'One' -AsPlainText -Force
$SecureString = @{SecureStringOne = $SecureStringOne; SecureStringTwo = 'Two'}

$CredentialOne = New-Object System.Management.Automation.PSCredential -ArgumentList 'One', $(ConvertTo-SecureString -String 'OnePassword' -AsPlainText -Force)
$Credential = @{CredentialOne = $CredentialOne; CredentialTwo = 'Two','TwoPassword'}

New-sthVault -VaultName TheVault -PlainText $PlainText -SecureString $Securestring -Credential $Credential</dev:code>
        <dev:remarks>
          <maml:para>Команда создает хранилища с именем TheVault, состоящее из двух свойств, сохраненных открытым текстом - PlainTextOne и PlainTextTwo, двух объектов SecureString - SecureStringOne и SecureStringTwo и двух объектов PSCredential - CredentialOne and CredentialTwo.</maml:para>
          <maml:para>Хранилище будет создано в папке Vaults, расположенной в каталоге модуля.</maml:para>
          <maml:para/>
          <maml:para/>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Пример 2: Создание хранилища с указанием пути и имени файла</maml:title>
        <dev:code>$PlainText = @{PlainTextOne = 'One'; PlainTextTwo = 'Two'}

$SecureStringOne = ConvertTo-SecureString -String 'One' -AsPlainText -Force
$SecureString = @{SecureStringOne = $SecureStringOne; SecureStringTwo = 'Two'}

$CredentialOne = New-Object System.Management.Automation.PSCredential -ArgumentList 'One', $(ConvertTo-SecureString -String 'OnePassword' -AsPlainText -Force)
$Credential = @{CredentialOne = $CredentialOne; CredentialTwo = 'Two','TwoPassword'}

New-sthVault -VaultFilePath C:\Vaults\SomeVault.xml -PlainText $PlainText -SecureString $Securestring -Credential $Credential</dev:code>
        <dev:remarks>
          <maml:para>Команда создает файл хранилища с именем SomeVault.xml, расположенный в каталоге C:\Vaults.</maml:para>
          <maml:para/>
          <maml:para/>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Remove-sthVault</command:name>
      <command:verb>Remove</command:verb>
      <command:noun>sthVault</command:noun>
      <maml:description>
        <maml:para>Команда удаляет хранилище.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Функция Remove-sthVault удаляет указанное хранилище.</maml:para>
      <maml:para>Параметр -VaultName удаляет хранилище с указанным именем из папки Vaults, расположенной в каталоге модуля.</maml:para>
      <maml:para>Параметр -VaultFilePath удаляет файл хранилища, расположенный по указанному пути.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Remove-sthVault</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
          <maml:name>VaultName</maml:name>
          <maml:Description>
            <maml:para>Указывает имя хранилища.</maml:para>
            <maml:para>Функция удаляет хранилище с указанным именем из папки Vaults, расположенной в каталоге модуля.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Remove-sthVault</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>VaultFilePath</maml:name>
          <maml:Description>
            <maml:para>Указывает путь и имя файла хранилища.</maml:para>
            <maml:para>Этот параметр позволяет вам удалить файл хранилища, расположенный в произвольной локации.</maml:para>
            <maml:para>Значение должно содержать путь и имя файла с расширением .xml.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
        <maml:name>VaultName</maml:name>
        <maml:Description>
          <maml:para>Указывает имя хранилища.</maml:para>
          <maml:para>Функция удаляет хранилище с указанным именем из папки Vaults, расположенной в каталоге модуля.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>VaultFilePath</maml:name>
        <maml:Description>
          <maml:para>Указывает путь и имя файла хранилища.</maml:para>
          <maml:para>Этот параметр позволяет вам удалить файл хранилища, расположенный в произвольной локации.</maml:para>
          <maml:para>Значение должно содержать путь и имя файла с расширением .xml.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>System.Object</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>Объекты SecureString и PSCredential используют DPAPI, таким образом хранилище, содержащее эти объекты, может быть использовано только на том компьютере, где оно было создано и только под той пользовательской учетной записью, под которой оно было создано.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>Пример 1: Удаление хранилища</maml:title>
        <dev:code>Remove-sthVault -VaultName TheVault</dev:code>
        <dev:remarks>
          <maml:para>Команда удаляет хранилище с указанным именем из папки Vaults, расположенной в каталоге модуля.</maml:para>
          <maml:para/>
          <maml:para/>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Пример 2: Удаление файла хранилища, расположенного по указанному пути</maml:title>
        <dev:code>Remove-sthVault -VaultFilePath C:\Vaults\SomeVault.xml</dev:code>
        <dev:remarks>
          <maml:para>Команда удаляет файл хранилища с именем SomeVault.xml, расположенный в каталоге C:\Vaults.</maml:para>
          <maml:para/>
          <maml:para/>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Remove-sthVaultProperty</command:name>
      <command:verb>Remove</command:verb>
      <command:noun>sthVaultProperty</command:noun>
      <maml:description>
        <maml:para>Команда удаляет свойства из хранилища.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Функция Remove-sthVaultProperty удаляет указанные свойства из хранилища.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Remove-sthVaultProperty</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
          <maml:name>VaultName</maml:name>
          <maml:Description>
            <maml:para>Указывает имя хранилища.</maml:para>
            <maml:para>Это имя хранилища, созданного при помощи команды `New-sthVault` с параметром -VaultName, находящегося в папке Vaults, расположенной в каталоге модуля.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PropertyName</maml:name>
          <maml:Description>
            <maml:para>Указывает имена свойств, которые требуется удалить из хранилища.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Remove-sthVaultProperty</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>VaultFilePath</maml:name>
          <maml:Description>
            <maml:para>Указывает путь и имя файла хранилища.</maml:para>
            <maml:para>Этот параметр позволяет вам использовать файл хранилища, расположенный в произвольной локации.</maml:para>
            <maml:para>Значение должно содержать путь и имя файла с расширением .xml.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PropertyName</maml:name>
          <maml:Description>
            <maml:para>Указывает имена свойств, которые требуется удалить из хранилища.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
        <maml:name>VaultName</maml:name>
        <maml:Description>
          <maml:para>Указывает имя хранилища.</maml:para>
          <maml:para>Это имя хранилища, созданного при помощи команды `New-sthVault` с параметром -VaultName, находящегося в папке Vaults, расположенной в каталоге модуля.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>VaultFilePath</maml:name>
        <maml:Description>
          <maml:para>Указывает путь и имя файла хранилища.</maml:para>
          <maml:para>Этот параметр позволяет вам использовать файл хранилища, расположенный в произвольной локации.</maml:para>
          <maml:para>Значение должно содержать путь и имя файла с расширением .xml.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PropertyName</maml:name>
        <maml:Description>
          <maml:para>Указывает имена свойств, которые требуется удалить из хранилища.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>System.Object</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>Объекты SecureString и PSCredential используют DPAPI, таким образом хранилище, содержащее эти объекты, может быть использовано только на том компьютере, где оно было создано и только под той пользовательской учетной записью, под которой оно было создано.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>Пример 1: Удаление свойств из хранилища</maml:title>
        <dev:code>Remove-sthVaultProperty -VaultName TheVault -PropertyName PropertyOne, PropertyTwo</dev:code>
        <dev:remarks>
          <maml:para>Команда удаляет свойства PropertyOne и PropertyTwo из хранилища с именем TheVault, находящегося в папке Vaults, расположенной в каталоге модуля.</maml:para>
          <maml:para/>
          <maml:para/>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Пример 2: Удаление свойств из файла хранилища, расположенного по указанному пути</maml:title>
        <dev:code>Remove-sthVaultProperty -VaultFilePath C:\Vaults\SomeVault.xml -PropertyName PropertyOne, PropertyTwo</dev:code>
        <dev:remarks>
          <maml:para>Команда удаляет свойства PropertyOne и PropertyTwo из файла хранилища с именем SomeVault.xml, расположенного в каталоге C:\Vaults.</maml:para>
          <maml:para/>
          <maml:para/>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-sthVaultProperty</command:name>
      <command:verb>Set</command:verb>
      <command:noun>sthVaultProperty</command:noun>
      <maml:description>
        <maml:para>Команда добавляет новые свойства в хранилище и изменяет значения существующих свойств.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Функция Set-sthVaultProperty добавляет новые свойства в указанное хранилище и изменяет значения существующих свойств.</maml:para>
      <maml:para>Значения свойств хранилища могут быть трех типов: PlainText, SecureString и Credential.</maml:para>
      <maml:para>Вы можете использовать параметры -PlainText, -SecureString и -Credential для задания требуемых свойств.
Каждый из этих параметров принимает в качестве значения хеш-таблицу (hashtable), содержащую пары Имя-Значение.</maml:para>
      <maml:para>Объекты SecureString и PSCredential используют DPAPI, таким образом хранилище, содержащее эти объекты, может быть использовано только на том компьютере, где оно было создано и только под той пользовательской учетной записью, под которой оно было создано.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-sthVaultProperty</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
          <maml:name>VaultName</maml:name>
          <maml:Description>
            <maml:para>Указывает имя хранилища.</maml:para>
            <maml:para>Это имя хранилища, созданного при помощи команды `New-sthVault` с параметром -VaultName, находящегося в папке Vaults, расположенной в каталоге модуля.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PlainText</maml:name>
          <maml:Description>
            <maml:para>Указывает свойства, значения которых должны быть сохранены открытым текстом.</maml:para>
            <maml:para>Параметр принимает в качестве значения хеш-таблицу (hashtable), содержащую пары Имя-Значение.</maml:para>
            <maml:para>Например:</maml:para>
            <maml:para>Set-sthVaultProperty SomeVault -PlainText @{PlainTextOne = 'NewValue'; NewPlainTextProperty = 'NewPropertyValue'}</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SecureString</maml:name>
          <maml:Description>
            <maml:para>Указывает свойства, значения которых должны быть сохранены в виде объекта SecureString.</maml:para>
            <maml:para>Параметр принимает в качестве значения хеш-таблицу (hashtable), содержащую пары Имя-Значение.</maml:para>
            <maml:para>Значения хэш-таблицы могут быть как объектами SecureString, так и открытым текстом.</maml:para>
            <maml:para>Если значение представлено открытым текстом, оно будет преобразовано в объект SecureString.</maml:para>
            <maml:para>Например:</maml:para>
            <maml:para>$SecureStringOne = ConvertTo-SecureString -String 'NewValue' -AsPlainText -Force
Set-sthVaultProperty SomeVault -SecureString @{SecureStringOne = $SecureStringOne; NewSecureStringProperty = 'NewPropertyValue'}</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Credential</maml:name>
          <maml:Description>
            <maml:para>Указывает свойства, значения которых должны быть сохранены в виде объекта PSCredential.</maml:para>
            <maml:para>Параметр принимает в качестве значения хеш-таблицу (hashtable), содержащую пары Имя-Значение.</maml:para>
            <maml:para>Значения хэш-таблицы могут быть как объектами PSCredential, так и массивом, состоящим из двух элементов, к примеру - @{Credential = 'Name', 'Password'}</maml:para>
            <maml:para>Если значение представлено в виде массива, оно будет преобразовано в объект PSCredential.</maml:para>
            <maml:para>Например:</maml:para>
            <maml:para>$CredentialOne = New-Object System.Management.Automation.PSCredential -ArgumentList 'NewUsername', $(ConvertTo-SecureString -String 'NewPassword' -AsPlainText -Force)
Set-sthVaultProperty SomeVault -Credential @{CredentialOne = $CredentialOne; NewCredential = 'NewCredentialUsername', 'NewCredentialPassword'}</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Set-sthVaultProperty</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>VaultFilePath</maml:name>
          <maml:Description>
            <maml:para>Указывает путь и имя файла хранилища.</maml:para>
            <maml:para>Этот параметр позволяет вам использовать файл хранилища, расположенный в произвольной локации.</maml:para>
            <maml:para>Значение должно содержать путь и имя файла с расширением .xml.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PlainText</maml:name>
          <maml:Description>
            <maml:para>Указывает свойства, значения которых должны быть сохранены открытым текстом.</maml:para>
            <maml:para>Параметр принимает в качестве значения хеш-таблицу (hashtable), содержащую пары Имя-Значение.</maml:para>
            <maml:para>Например:</maml:para>
            <maml:para>Set-sthVaultProperty SomeVault -PlainText @{PlainTextOne = 'NewValue'; NewPlainTextProperty = 'NewPropertyValue'}</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SecureString</maml:name>
          <maml:Description>
            <maml:para>Указывает свойства, значения которых должны быть сохранены в виде объекта SecureString.</maml:para>
            <maml:para>Параметр принимает в качестве значения хеш-таблицу (hashtable), содержащую пары Имя-Значение.</maml:para>
            <maml:para>Значения хэш-таблицы могут быть как объектами SecureString, так и открытым текстом.</maml:para>
            <maml:para>Если значение представлено открытым текстом, оно будет преобразовано в объект SecureString.</maml:para>
            <maml:para>Например:</maml:para>
            <maml:para>$SecureStringOne = ConvertTo-SecureString -String 'NewValue' -AsPlainText -Force
Set-sthVaultProperty SomeVault -SecureString @{SecureStringOne = $SecureStringOne; NewSecureStringProperty = 'NewPropertyValue'}</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Credential</maml:name>
          <maml:Description>
            <maml:para>Указывает свойства, значения которых должны быть сохранены в виде объекта PSCredential.</maml:para>
            <maml:para>Параметр принимает в качестве значения хеш-таблицу (hashtable), содержащую пары Имя-Значение.</maml:para>
            <maml:para>Значения хэш-таблицы могут быть как объектами PSCredential, так и массивом, состоящим из двух элементов, к примеру - @{Credential = 'Name', 'Password'}</maml:para>
            <maml:para>Если значение представлено в виде массива, оно будет преобразовано в объект PSCredential.</maml:para>
            <maml:para>Например:</maml:para>
            <maml:para>$CredentialOne = New-Object System.Management.Automation.PSCredential -ArgumentList 'NewUsername', $(ConvertTo-SecureString -String 'NewPassword' -AsPlainText -Force)
Set-sthVaultProperty SomeVault -Credential @{CredentialOne = $CredentialOne; NewCredential = 'NewCredentialUsername', 'NewCredentialPassword'}</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
        <maml:name>VaultName</maml:name>
        <maml:Description>
          <maml:para>Указывает имя хранилища.</maml:para>
          <maml:para>Это имя хранилища, созданного при помощи команды `New-sthVault` с параметром -VaultName, находящегося в папке Vaults, расположенной в каталоге модуля.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>VaultFilePath</maml:name>
        <maml:Description>
          <maml:para>Указывает путь и имя файла хранилища.</maml:para>
          <maml:para>Этот параметр позволяет вам использовать файл хранилища, расположенный в произвольной локации.</maml:para>
          <maml:para>Значение должно содержать путь и имя файла с расширением .xml.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PlainText</maml:name>
        <maml:Description>
          <maml:para>Указывает свойства, значения которых должны быть сохранены открытым текстом.</maml:para>
          <maml:para>Параметр принимает в качестве значения хеш-таблицу (hashtable), содержащую пары Имя-Значение.</maml:para>
          <maml:para>Например:</maml:para>
          <maml:para>Set-sthVaultProperty SomeVault -PlainText @{PlainTextOne = 'NewValue'; NewPlainTextProperty = 'NewPropertyValue'}</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>Hashtable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SecureString</maml:name>
        <maml:Description>
          <maml:para>Указывает свойства, значения которых должны быть сохранены в виде объекта SecureString.</maml:para>
          <maml:para>Параметр принимает в качестве значения хеш-таблицу (hashtable), содержащую пары Имя-Значение.</maml:para>
          <maml:para>Значения хэш-таблицы могут быть как объектами SecureString, так и открытым текстом.</maml:para>
          <maml:para>Если значение представлено открытым текстом, оно будет преобразовано в объект SecureString.</maml:para>
          <maml:para>Например:</maml:para>
          <maml:para>$SecureStringOne = ConvertTo-SecureString -String 'NewValue' -AsPlainText -Force
Set-sthVaultProperty SomeVault -SecureString @{SecureStringOne = $SecureStringOne; NewSecureStringProperty = 'NewPropertyValue'}</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>Hashtable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Credential</maml:name>
        <maml:Description>
          <maml:para>Указывает свойства, значения которых должны быть сохранены в виде объекта PSCredential.</maml:para>
          <maml:para>Параметр принимает в качестве значения хеш-таблицу (hashtable), содержащую пары Имя-Значение.</maml:para>
          <maml:para>Значения хэш-таблицы могут быть как объектами PSCredential, так и массивом, состоящим из двух элементов, к примеру - @{Credential = 'Name', 'Password'}</maml:para>
          <maml:para>Если значение представлено в виде массива, оно будет преобразовано в объект PSCredential.</maml:para>
          <maml:para>Например:</maml:para>
          <maml:para>$CredentialOne = New-Object System.Management.Automation.PSCredential -ArgumentList 'NewUsername', $(ConvertTo-SecureString -String 'NewPassword' -AsPlainText -Force)
Set-sthVaultProperty SomeVault -Credential @{CredentialOne = $CredentialOne; NewCredential = 'NewCredentialUsername', 'NewCredentialPassword'}</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>Hashtable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>System.Object</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>Объекты SecureString и PSCredential используют DPAPI, таким образом хранилище, содержащее эти объекты, может быть использовано только на том компьютере, где оно было создано и только под той пользовательской учетной записью, под которой оно было создано.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>Пример 1: Изменение нескольких свойств и добавление новых</maml:title>
        <dev:code>$PlainText = @{PlainTextOne = '1'; PlainTextThree = 'Three'}

$SecureStringOne = ConvertTo-SecureString -String '1' -AsPlainText -Force
$SecureString = @{SecureStringOne = $SecureStringOne; SecureStringThree = 'Three'}

$CredentialOne = New-Object System.Management.Automation.PSCredential -ArgumentList '1', $(ConvertTo-SecureString -String '1' -AsPlainText -Force)
$Credential = @{CredentialOne = $CredentialOne; CredentialThree = 'Three', 'ThreePassword'}

Set-sthVaultProperty -VaultName TheVault -PlainText $PlainText -SecureString $Securestring -Credential $Credential

Get-sthVault -VaultName TheVault -ShowSecureData

Name                           Value
----                           -----
PlainTextOne                   1
PlainTextThree                 Three
PlainTextTwo                   Two
SecureStringOne                1
SecureStringThree              Three
SecureStringTwo                Two
CredentialOne                  {1, 1}
CredentialThree                {Three, ThreePassword}
CredentialTwo                  {Two, TwoPassword}</dev:code>
        <dev:remarks>
          <maml:para>Команда изменяет значения свойств PlainTextOne, SecureStringOne и CredentialOne, и добавляет свойства PlainTextThree, SecureStringThree и CredentialThree в хранилище.</maml:para>
          <maml:para/>
          <maml:para/>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Пример 2: Изменение нескольких свойств и добавление новых в хранилище, расположенное по указанному пути</maml:title>
        <dev:code>$PlainText = @{PlainTextOne = '1'; PlainTextThree = 'Three'}

$SecureStringOne = ConvertTo-SecureString -String '1' -AsPlainText -Force
$SecureString = @{SecureStringOne = $SecureStringOne; SecureStringThree = 'Three'}

$CredentialOne = New-Object System.Management.Automation.PSCredential -ArgumentList '1', $(ConvertTo-SecureString -String '1' -AsPlainText -Force)
$Credential = @{CredentialOne = $CredentialOne; CredentialThree = 'Three', 'ThreePassword'}

Set-sthVaultProperty -VaultFilePath C:\Vaults\SomeVault.xml -PlainText $PlainText -SecureString $Securestring -Credential $Credential

Get-sthVault -VaultFilePath C:\Vaults\SomeVault.xml -ShowSecureData

Name                           Value
----                           -----
PlainTextOne                   1
PlainTextThree                 Three
PlainTextTwo                   Two
SecureStringOne                1
SecureStringThree              Three
SecureStringTwo                Two
CredentialOne                  {1, 1}
CredentialThree                {Three, ThreePassword}
CredentialTwo                  {Two, TwoPassword}</dev:code>
        <dev:remarks>
          <maml:para>Команда изменяет значения свойств PlainTextOne, SecureStringOne и CredentialOne, и добавляет свойства PlainTextThree, SecureStringThree и CredentialThree в файл хранилища с именем SomeVault.xml, расположенный в каталоге C:\Vaults.</maml:para>
          <maml:para/>
          <maml:para/>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
</helpItems>